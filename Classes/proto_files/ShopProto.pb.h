// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ShopProto.proto

#ifndef PROTOBUF_ShopProto_2eproto__INCLUDED
#define PROTOBUF_ShopProto_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace com {
namespace tiange {
namespace mdsj {
namespace proto {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_ShopProto_2eproto();
void protobuf_AssignDesc_ShopProto_2eproto();
void protobuf_ShutdownFile_ShopProto_2eproto();

class ShopListRequest;
class Shop;
class ShopListResponse;
class ItemDetailRequest;
class Item;
class ItemDetailResponse;

enum ShopResult {
  SHOP_SUCCESS = 0,
  SHOP_SERVER_BUSY = 1,
  SHOP_KEY_INVALID = 2
};
bool ShopResult_IsValid(int value);
const ShopResult ShopResult_MIN = SHOP_SUCCESS;
const ShopResult ShopResult_MAX = SHOP_KEY_INVALID;
const int ShopResult_ARRAYSIZE = ShopResult_MAX + 1;

const ::google::protobuf::EnumDescriptor* ShopResult_descriptor();
inline const ::std::string& ShopResult_Name(ShopResult value) {
  return ::google::protobuf::internal::NameOfEnum(
    ShopResult_descriptor(), value);
}
inline bool ShopResult_Parse(
    const ::std::string& name, ShopResult* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ShopResult>(
    ShopResult_descriptor(), name, value);
}
// ===================================================================

class ShopListRequest : public ::google::protobuf::Message {
 public:
  ShopListRequest();
  virtual ~ShopListRequest();

  ShopListRequest(const ShopListRequest& from);

  inline ShopListRequest& operator=(const ShopListRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ShopListRequest& default_instance();

  void Swap(ShopListRequest* other);

  // implements Message ----------------------------------------------

  ShopListRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ShopListRequest& from);
  void MergeFrom(const ShopListRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:com.tiange.mdsj.proto.ShopListRequest)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_ShopProto_2eproto();
  friend void protobuf_AssignDesc_ShopProto_2eproto();
  friend void protobuf_ShutdownFile_ShopProto_2eproto();

  void InitAsDefaultInstance();
  static ShopListRequest* default_instance_;
};
// -------------------------------------------------------------------

class Shop : public ::google::protobuf::Message {
 public:
  Shop();
  virtual ~Shop();

  Shop(const Shop& from);

  inline Shop& operator=(const Shop& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Shop& default_instance();

  void Swap(Shop* other);

  // implements Message ----------------------------------------------

  Shop* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Shop& from);
  void MergeFrom(const Shop& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 shopId = 1;
  inline bool has_shopid() const;
  inline void clear_shopid();
  static const int kShopIdFieldNumber = 1;
  inline ::google::protobuf::int32 shopid() const;
  inline void set_shopid(::google::protobuf::int32 value);

  // required int32 itemId = 2;
  inline bool has_itemid() const;
  inline void clear_itemid();
  static const int kItemIdFieldNumber = 2;
  inline ::google::protobuf::int32 itemid() const;
  inline void set_itemid(::google::protobuf::int32 value);

  // required int32 sex = 3;
  inline bool has_sex() const;
  inline void clear_sex();
  static const int kSexFieldNumber = 3;
  inline ::google::protobuf::int32 sex() const;
  inline void set_sex(::google::protobuf::int32 value);

  // required int32 statisticalType = 4;
  inline bool has_statisticaltype() const;
  inline void clear_statisticaltype();
  static const int kStatisticalTypeFieldNumber = 4;
  inline ::google::protobuf::int32 statisticaltype() const;
  inline void set_statisticaltype(::google::protobuf::int32 value);

  // required int32 useType = 5;
  inline bool has_usetype() const;
  inline void clear_usetype();
  static const int kUseTypeFieldNumber = 5;
  inline ::google::protobuf::int32 usetype() const;
  inline void set_usetype(::google::protobuf::int32 value);

  // required int32 sellType = 6;
  inline bool has_selltype() const;
  inline void clear_selltype();
  static const int kSellTypeFieldNumber = 6;
  inline ::google::protobuf::int32 selltype() const;
  inline void set_selltype(::google::protobuf::int32 value);

  // required int32 sellQuantity = 7;
  inline bool has_sellquantity() const;
  inline void clear_sellquantity();
  static const int kSellQuantityFieldNumber = 7;
  inline ::google::protobuf::int32 sellquantity() const;
  inline void set_sellquantity(::google::protobuf::int32 value);

  // required int32 priceGold = 8;
  inline bool has_pricegold() const;
  inline void clear_pricegold();
  static const int kPriceGoldFieldNumber = 8;
  inline ::google::protobuf::int32 pricegold() const;
  inline void set_pricegold(::google::protobuf::int32 value);

  // required int32 priceCoins = 9;
  inline bool has_pricecoins() const;
  inline void clear_pricecoins();
  static const int kPriceCoinsFieldNumber = 9;
  inline ::google::protobuf::int32 pricecoins() const;
  inline void set_pricecoins(::google::protobuf::int32 value);

  // required int32 discount = 10;
  inline bool has_discount() const;
  inline void clear_discount();
  static const int kDiscountFieldNumber = 10;
  inline ::google::protobuf::int32 discount() const;
  inline void set_discount(::google::protobuf::int32 value);

  // required int32 timeOn = 11;
  inline bool has_timeon() const;
  inline void clear_timeon();
  static const int kTimeOnFieldNumber = 11;
  inline ::google::protobuf::int32 timeon() const;
  inline void set_timeon(::google::protobuf::int32 value);

  // required int32 timeOff = 12;
  inline bool has_timeoff() const;
  inline void clear_timeoff();
  static const int kTimeOffFieldNumber = 12;
  inline ::google::protobuf::int32 timeoff() const;
  inline void set_timeoff(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:com.tiange.mdsj.proto.Shop)
 private:
  inline void set_has_shopid();
  inline void clear_has_shopid();
  inline void set_has_itemid();
  inline void clear_has_itemid();
  inline void set_has_sex();
  inline void clear_has_sex();
  inline void set_has_statisticaltype();
  inline void clear_has_statisticaltype();
  inline void set_has_usetype();
  inline void clear_has_usetype();
  inline void set_has_selltype();
  inline void clear_has_selltype();
  inline void set_has_sellquantity();
  inline void clear_has_sellquantity();
  inline void set_has_pricegold();
  inline void clear_has_pricegold();
  inline void set_has_pricecoins();
  inline void clear_has_pricecoins();
  inline void set_has_discount();
  inline void clear_has_discount();
  inline void set_has_timeon();
  inline void clear_has_timeon();
  inline void set_has_timeoff();
  inline void clear_has_timeoff();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 shopid_;
  ::google::protobuf::int32 itemid_;
  ::google::protobuf::int32 sex_;
  ::google::protobuf::int32 statisticaltype_;
  ::google::protobuf::int32 usetype_;
  ::google::protobuf::int32 selltype_;
  ::google::protobuf::int32 sellquantity_;
  ::google::protobuf::int32 pricegold_;
  ::google::protobuf::int32 pricecoins_;
  ::google::protobuf::int32 discount_;
  ::google::protobuf::int32 timeon_;
  ::google::protobuf::int32 timeoff_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(12 + 31) / 32];

  friend void  protobuf_AddDesc_ShopProto_2eproto();
  friend void protobuf_AssignDesc_ShopProto_2eproto();
  friend void protobuf_ShutdownFile_ShopProto_2eproto();

  void InitAsDefaultInstance();
  static Shop* default_instance_;
};
// -------------------------------------------------------------------

class ShopListResponse : public ::google::protobuf::Message {
 public:
  ShopListResponse();
  virtual ~ShopListResponse();

  ShopListResponse(const ShopListResponse& from);

  inline ShopListResponse& operator=(const ShopListResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ShopListResponse& default_instance();

  void Swap(ShopListResponse* other);

  // implements Message ----------------------------------------------

  ShopListResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ShopListResponse& from);
  void MergeFrom(const ShopListResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .com.tiange.mdsj.proto.ShopResult result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::com::tiange::mdsj::proto::ShopResult result() const;
  inline void set_result(::com::tiange::mdsj::proto::ShopResult value);

  // repeated .com.tiange.mdsj.proto.Shop shop = 2;
  inline int shop_size() const;
  inline void clear_shop();
  static const int kShopFieldNumber = 2;
  inline const ::com::tiange::mdsj::proto::Shop& shop(int index) const;
  inline ::com::tiange::mdsj::proto::Shop* mutable_shop(int index);
  inline ::com::tiange::mdsj::proto::Shop* add_shop();
  inline const ::google::protobuf::RepeatedPtrField< ::com::tiange::mdsj::proto::Shop >&
      shop() const;
  inline ::google::protobuf::RepeatedPtrField< ::com::tiange::mdsj::proto::Shop >*
      mutable_shop();

  // @@protoc_insertion_point(class_scope:com.tiange.mdsj.proto.ShopListResponse)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::com::tiange::mdsj::proto::Shop > shop_;
  int result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_ShopProto_2eproto();
  friend void protobuf_AssignDesc_ShopProto_2eproto();
  friend void protobuf_ShutdownFile_ShopProto_2eproto();

  void InitAsDefaultInstance();
  static ShopListResponse* default_instance_;
};
// -------------------------------------------------------------------

class ItemDetailRequest : public ::google::protobuf::Message {
 public:
  ItemDetailRequest();
  virtual ~ItemDetailRequest();

  ItemDetailRequest(const ItemDetailRequest& from);

  inline ItemDetailRequest& operator=(const ItemDetailRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ItemDetailRequest& default_instance();

  void Swap(ItemDetailRequest* other);

  // implements Message ----------------------------------------------

  ItemDetailRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ItemDetailRequest& from);
  void MergeFrom(const ItemDetailRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 itemId = 1;
  inline bool has_itemid() const;
  inline void clear_itemid();
  static const int kItemIdFieldNumber = 1;
  inline ::google::protobuf::int32 itemid() const;
  inline void set_itemid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:com.tiange.mdsj.proto.ItemDetailRequest)
 private:
  inline void set_has_itemid();
  inline void clear_has_itemid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 itemid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_ShopProto_2eproto();
  friend void protobuf_AssignDesc_ShopProto_2eproto();
  friend void protobuf_ShutdownFile_ShopProto_2eproto();

  void InitAsDefaultInstance();
  static ItemDetailRequest* default_instance_;
};
// -------------------------------------------------------------------

class Item : public ::google::protobuf::Message {
 public:
  Item();
  virtual ~Item();

  Item(const Item& from);

  inline Item& operator=(const Item& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Item& default_instance();

  void Swap(Item* other);

  // implements Message ----------------------------------------------

  Item* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Item& from);
  void MergeFrom(const Item& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 added = 1;
  inline bool has_added() const;
  inline void clear_added();
  static const int kAddedFieldNumber = 1;
  inline ::google::protobuf::int32 added() const;
  inline void set_added(::google::protobuf::int32 value);

  // required int32 itemId = 2;
  inline bool has_itemid() const;
  inline void clear_itemid();
  static const int kItemIdFieldNumber = 2;
  inline ::google::protobuf::int32 itemid() const;
  inline void set_itemid(::google::protobuf::int32 value);

  // required string name = 3;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 3;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // required string desc = 4;
  inline bool has_desc() const;
  inline void clear_desc();
  static const int kDescFieldNumber = 4;
  inline const ::std::string& desc() const;
  inline void set_desc(const ::std::string& value);
  inline void set_desc(const char* value);
  inline void set_desc(const char* value, size_t size);
  inline ::std::string* mutable_desc();
  inline ::std::string* release_desc();
  inline void set_allocated_desc(::std::string* desc);

  // required int32 type1 = 5;
  inline bool has_type1() const;
  inline void clear_type1();
  static const int kType1FieldNumber = 5;
  inline ::google::protobuf::int32 type1() const;
  inline void set_type1(::google::protobuf::int32 value);

  // required int32 type2 = 6;
  inline bool has_type2() const;
  inline void clear_type2();
  static const int kType2FieldNumber = 6;
  inline ::google::protobuf::int32 type2() const;
  inline void set_type2(::google::protobuf::int32 value);

  // required int32 quality = 7;
  inline bool has_quality() const;
  inline void clear_quality();
  static const int kQualityFieldNumber = 7;
  inline ::google::protobuf::int32 quality() const;
  inline void set_quality(::google::protobuf::int32 value);

  // required int32 hp = 8;
  inline bool has_hp() const;
  inline void clear_hp();
  static const int kHpFieldNumber = 8;
  inline ::google::protobuf::int32 hp() const;
  inline void set_hp(::google::protobuf::int32 value);

  // required int32 cp = 9;
  inline bool has_cp() const;
  inline void clear_cp();
  static const int kCpFieldNumber = 9;
  inline ::google::protobuf::int32 cp() const;
  inline void set_cp(::google::protobuf::int32 value);

  // required int32 atk = 10;
  inline bool has_atk() const;
  inline void clear_atk();
  static const int kAtkFieldNumber = 10;
  inline ::google::protobuf::int32 atk() const;
  inline void set_atk(::google::protobuf::int32 value);

  // required int32 def = 11;
  inline bool has_def() const;
  inline void clear_def();
  static const int kDefFieldNumber = 11;
  inline ::google::protobuf::int32 def() const;
  inline void set_def(::google::protobuf::int32 value);

  // required int32 dex = 12;
  inline bool has_dex() const;
  inline void clear_dex();
  static const int kDexFieldNumber = 12;
  inline ::google::protobuf::int32 dex() const;
  inline void set_dex(::google::protobuf::int32 value);

  // required int32 cri = 13;
  inline bool has_cri() const;
  inline void clear_cri();
  static const int kCriFieldNumber = 13;
  inline ::google::protobuf::int32 cri() const;
  inline void set_cri(::google::protobuf::int32 value);

  // required int32 block = 14;
  inline bool has_block() const;
  inline void clear_block();
  static const int kBlockFieldNumber = 14;
  inline ::google::protobuf::int32 block() const;
  inline void set_block(::google::protobuf::int32 value);

  // required int32 agl = 15;
  inline bool has_agl() const;
  inline void clear_agl();
  static const int kAglFieldNumber = 15;
  inline ::google::protobuf::int32 agl() const;
  inline void set_agl(::google::protobuf::int32 value);

  // required int32 strengLevel = 16;
  inline bool has_strenglevel() const;
  inline void clear_strenglevel();
  static const int kStrengLevelFieldNumber = 16;
  inline ::google::protobuf::int32 strenglevel() const;
  inline void set_strenglevel(::google::protobuf::int32 value);

  // required int32 inlayNum = 17;
  inline bool has_inlaynum() const;
  inline void clear_inlaynum();
  static const int kInlayNumFieldNumber = 17;
  inline ::google::protobuf::int32 inlaynum() const;
  inline void set_inlaynum(::google::protobuf::int32 value);

  // required int32 discount = 18;
  inline bool has_discount() const;
  inline void clear_discount();
  static const int kDiscountFieldNumber = 18;
  inline ::google::protobuf::int32 discount() const;
  inline void set_discount(::google::protobuf::int32 value);

  // required int32 sex = 19;
  inline bool has_sex() const;
  inline void clear_sex();
  static const int kSexFieldNumber = 19;
  inline ::google::protobuf::int32 sex() const;
  inline void set_sex(::google::protobuf::int32 value);

  // required int32 statisticalType = 20;
  inline bool has_statisticaltype() const;
  inline void clear_statisticaltype();
  static const int kStatisticalTypeFieldNumber = 20;
  inline ::google::protobuf::int32 statisticaltype() const;
  inline void set_statisticaltype(::google::protobuf::int32 value);

  // required int32 useType = 21;
  inline bool has_usetype() const;
  inline void clear_usetype();
  static const int kUseTypeFieldNumber = 21;
  inline ::google::protobuf::int32 usetype() const;
  inline void set_usetype(::google::protobuf::int32 value);

  // required int32 overlay = 22;
  inline bool has_overlay() const;
  inline void clear_overlay();
  static const int kOverlayFieldNumber = 22;
  inline ::google::protobuf::int32 overlay() const;
  inline void set_overlay(::google::protobuf::int32 value);

  // required int32 valid = 23;
  inline bool has_valid() const;
  inline void clear_valid();
  static const int kValidFieldNumber = 23;
  inline ::google::protobuf::int32 valid() const;
  inline void set_valid(::google::protobuf::int32 value);

  // required int32 disappears = 24;
  inline bool has_disappears() const;
  inline void clear_disappears();
  static const int kDisappearsFieldNumber = 24;
  inline ::google::protobuf::int32 disappears() const;
  inline void set_disappears(::google::protobuf::int32 value);

  // required int32 sellType = 25;
  inline bool has_selltype() const;
  inline void clear_selltype();
  static const int kSellTypeFieldNumber = 25;
  inline ::google::protobuf::int32 selltype() const;
  inline void set_selltype(::google::protobuf::int32 value);

  // required int32 sellQuantity = 26;
  inline bool has_sellquantity() const;
  inline void clear_sellquantity();
  static const int kSellQuantityFieldNumber = 26;
  inline ::google::protobuf::int32 sellquantity() const;
  inline void set_sellquantity(::google::protobuf::int32 value);

  // required int32 priceGold = 27;
  inline bool has_pricegold() const;
  inline void clear_pricegold();
  static const int kPriceGoldFieldNumber = 27;
  inline ::google::protobuf::int32 pricegold() const;
  inline void set_pricegold(::google::protobuf::int32 value);

  // required int32 priceCoins = 28;
  inline bool has_pricecoins() const;
  inline void clear_pricecoins();
  static const int kPriceCoinsFieldNumber = 28;
  inline ::google::protobuf::int32 pricecoins() const;
  inline void set_pricecoins(::google::protobuf::int32 value);

  // required int32 timeOn = 29;
  inline bool has_timeon() const;
  inline void clear_timeon();
  static const int kTimeOnFieldNumber = 29;
  inline ::google::protobuf::int32 timeon() const;
  inline void set_timeon(::google::protobuf::int32 value);

  // required int32 timeOff = 30;
  inline bool has_timeoff() const;
  inline void clear_timeoff();
  static const int kTimeOffFieldNumber = 30;
  inline ::google::protobuf::int32 timeoff() const;
  inline void set_timeoff(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:com.tiange.mdsj.proto.Item)
 private:
  inline void set_has_added();
  inline void clear_has_added();
  inline void set_has_itemid();
  inline void clear_has_itemid();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_desc();
  inline void clear_has_desc();
  inline void set_has_type1();
  inline void clear_has_type1();
  inline void set_has_type2();
  inline void clear_has_type2();
  inline void set_has_quality();
  inline void clear_has_quality();
  inline void set_has_hp();
  inline void clear_has_hp();
  inline void set_has_cp();
  inline void clear_has_cp();
  inline void set_has_atk();
  inline void clear_has_atk();
  inline void set_has_def();
  inline void clear_has_def();
  inline void set_has_dex();
  inline void clear_has_dex();
  inline void set_has_cri();
  inline void clear_has_cri();
  inline void set_has_block();
  inline void clear_has_block();
  inline void set_has_agl();
  inline void clear_has_agl();
  inline void set_has_strenglevel();
  inline void clear_has_strenglevel();
  inline void set_has_inlaynum();
  inline void clear_has_inlaynum();
  inline void set_has_discount();
  inline void clear_has_discount();
  inline void set_has_sex();
  inline void clear_has_sex();
  inline void set_has_statisticaltype();
  inline void clear_has_statisticaltype();
  inline void set_has_usetype();
  inline void clear_has_usetype();
  inline void set_has_overlay();
  inline void clear_has_overlay();
  inline void set_has_valid();
  inline void clear_has_valid();
  inline void set_has_disappears();
  inline void clear_has_disappears();
  inline void set_has_selltype();
  inline void clear_has_selltype();
  inline void set_has_sellquantity();
  inline void clear_has_sellquantity();
  inline void set_has_pricegold();
  inline void clear_has_pricegold();
  inline void set_has_pricecoins();
  inline void clear_has_pricecoins();
  inline void set_has_timeon();
  inline void clear_has_timeon();
  inline void set_has_timeoff();
  inline void clear_has_timeoff();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 added_;
  ::google::protobuf::int32 itemid_;
  ::std::string* name_;
  ::std::string* desc_;
  ::google::protobuf::int32 type1_;
  ::google::protobuf::int32 type2_;
  ::google::protobuf::int32 quality_;
  ::google::protobuf::int32 hp_;
  ::google::protobuf::int32 cp_;
  ::google::protobuf::int32 atk_;
  ::google::protobuf::int32 def_;
  ::google::protobuf::int32 dex_;
  ::google::protobuf::int32 cri_;
  ::google::protobuf::int32 block_;
  ::google::protobuf::int32 agl_;
  ::google::protobuf::int32 strenglevel_;
  ::google::protobuf::int32 inlaynum_;
  ::google::protobuf::int32 discount_;
  ::google::protobuf::int32 sex_;
  ::google::protobuf::int32 statisticaltype_;
  ::google::protobuf::int32 usetype_;
  ::google::protobuf::int32 overlay_;
  ::google::protobuf::int32 valid_;
  ::google::protobuf::int32 disappears_;
  ::google::protobuf::int32 selltype_;
  ::google::protobuf::int32 sellquantity_;
  ::google::protobuf::int32 pricegold_;
  ::google::protobuf::int32 pricecoins_;
  ::google::protobuf::int32 timeon_;
  ::google::protobuf::int32 timeoff_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(30 + 31) / 32];

  friend void  protobuf_AddDesc_ShopProto_2eproto();
  friend void protobuf_AssignDesc_ShopProto_2eproto();
  friend void protobuf_ShutdownFile_ShopProto_2eproto();

  void InitAsDefaultInstance();
  static Item* default_instance_;
};
// -------------------------------------------------------------------

class ItemDetailResponse : public ::google::protobuf::Message {
 public:
  ItemDetailResponse();
  virtual ~ItemDetailResponse();

  ItemDetailResponse(const ItemDetailResponse& from);

  inline ItemDetailResponse& operator=(const ItemDetailResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ItemDetailResponse& default_instance();

  void Swap(ItemDetailResponse* other);

  // implements Message ----------------------------------------------

  ItemDetailResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ItemDetailResponse& from);
  void MergeFrom(const ItemDetailResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .com.tiange.mdsj.proto.ShopResult result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::com::tiange::mdsj::proto::ShopResult result() const;
  inline void set_result(::com::tiange::mdsj::proto::ShopResult value);

  // required .com.tiange.mdsj.proto.Item item = 2;
  inline bool has_item() const;
  inline void clear_item();
  static const int kItemFieldNumber = 2;
  inline const ::com::tiange::mdsj::proto::Item& item() const;
  inline ::com::tiange::mdsj::proto::Item* mutable_item();
  inline ::com::tiange::mdsj::proto::Item* release_item();
  inline void set_allocated_item(::com::tiange::mdsj::proto::Item* item);

  // @@protoc_insertion_point(class_scope:com.tiange.mdsj.proto.ItemDetailResponse)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_item();
  inline void clear_has_item();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::com::tiange::mdsj::proto::Item* item_;
  int result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_ShopProto_2eproto();
  friend void protobuf_AssignDesc_ShopProto_2eproto();
  friend void protobuf_ShutdownFile_ShopProto_2eproto();

  void InitAsDefaultInstance();
  static ItemDetailResponse* default_instance_;
};
// ===================================================================


// ===================================================================

// ShopListRequest

// -------------------------------------------------------------------

// Shop

// required int32 shopId = 1;
inline bool Shop::has_shopid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Shop::set_has_shopid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Shop::clear_has_shopid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Shop::clear_shopid() {
  shopid_ = 0;
  clear_has_shopid();
}
inline ::google::protobuf::int32 Shop::shopid() const {
  return shopid_;
}
inline void Shop::set_shopid(::google::protobuf::int32 value) {
  set_has_shopid();
  shopid_ = value;
}

// required int32 itemId = 2;
inline bool Shop::has_itemid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Shop::set_has_itemid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Shop::clear_has_itemid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Shop::clear_itemid() {
  itemid_ = 0;
  clear_has_itemid();
}
inline ::google::protobuf::int32 Shop::itemid() const {
  return itemid_;
}
inline void Shop::set_itemid(::google::protobuf::int32 value) {
  set_has_itemid();
  itemid_ = value;
}

// required int32 sex = 3;
inline bool Shop::has_sex() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Shop::set_has_sex() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Shop::clear_has_sex() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Shop::clear_sex() {
  sex_ = 0;
  clear_has_sex();
}
inline ::google::protobuf::int32 Shop::sex() const {
  return sex_;
}
inline void Shop::set_sex(::google::protobuf::int32 value) {
  set_has_sex();
  sex_ = value;
}

// required int32 statisticalType = 4;
inline bool Shop::has_statisticaltype() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Shop::set_has_statisticaltype() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Shop::clear_has_statisticaltype() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Shop::clear_statisticaltype() {
  statisticaltype_ = 0;
  clear_has_statisticaltype();
}
inline ::google::protobuf::int32 Shop::statisticaltype() const {
  return statisticaltype_;
}
inline void Shop::set_statisticaltype(::google::protobuf::int32 value) {
  set_has_statisticaltype();
  statisticaltype_ = value;
}

// required int32 useType = 5;
inline bool Shop::has_usetype() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Shop::set_has_usetype() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Shop::clear_has_usetype() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Shop::clear_usetype() {
  usetype_ = 0;
  clear_has_usetype();
}
inline ::google::protobuf::int32 Shop::usetype() const {
  return usetype_;
}
inline void Shop::set_usetype(::google::protobuf::int32 value) {
  set_has_usetype();
  usetype_ = value;
}

// required int32 sellType = 6;
inline bool Shop::has_selltype() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Shop::set_has_selltype() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Shop::clear_has_selltype() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Shop::clear_selltype() {
  selltype_ = 0;
  clear_has_selltype();
}
inline ::google::protobuf::int32 Shop::selltype() const {
  return selltype_;
}
inline void Shop::set_selltype(::google::protobuf::int32 value) {
  set_has_selltype();
  selltype_ = value;
}

// required int32 sellQuantity = 7;
inline bool Shop::has_sellquantity() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Shop::set_has_sellquantity() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Shop::clear_has_sellquantity() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Shop::clear_sellquantity() {
  sellquantity_ = 0;
  clear_has_sellquantity();
}
inline ::google::protobuf::int32 Shop::sellquantity() const {
  return sellquantity_;
}
inline void Shop::set_sellquantity(::google::protobuf::int32 value) {
  set_has_sellquantity();
  sellquantity_ = value;
}

// required int32 priceGold = 8;
inline bool Shop::has_pricegold() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Shop::set_has_pricegold() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Shop::clear_has_pricegold() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Shop::clear_pricegold() {
  pricegold_ = 0;
  clear_has_pricegold();
}
inline ::google::protobuf::int32 Shop::pricegold() const {
  return pricegold_;
}
inline void Shop::set_pricegold(::google::protobuf::int32 value) {
  set_has_pricegold();
  pricegold_ = value;
}

// required int32 priceCoins = 9;
inline bool Shop::has_pricecoins() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void Shop::set_has_pricecoins() {
  _has_bits_[0] |= 0x00000100u;
}
inline void Shop::clear_has_pricecoins() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void Shop::clear_pricecoins() {
  pricecoins_ = 0;
  clear_has_pricecoins();
}
inline ::google::protobuf::int32 Shop::pricecoins() const {
  return pricecoins_;
}
inline void Shop::set_pricecoins(::google::protobuf::int32 value) {
  set_has_pricecoins();
  pricecoins_ = value;
}

// required int32 discount = 10;
inline bool Shop::has_discount() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void Shop::set_has_discount() {
  _has_bits_[0] |= 0x00000200u;
}
inline void Shop::clear_has_discount() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void Shop::clear_discount() {
  discount_ = 0;
  clear_has_discount();
}
inline ::google::protobuf::int32 Shop::discount() const {
  return discount_;
}
inline void Shop::set_discount(::google::protobuf::int32 value) {
  set_has_discount();
  discount_ = value;
}

// required int32 timeOn = 11;
inline bool Shop::has_timeon() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void Shop::set_has_timeon() {
  _has_bits_[0] |= 0x00000400u;
}
inline void Shop::clear_has_timeon() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void Shop::clear_timeon() {
  timeon_ = 0;
  clear_has_timeon();
}
inline ::google::protobuf::int32 Shop::timeon() const {
  return timeon_;
}
inline void Shop::set_timeon(::google::protobuf::int32 value) {
  set_has_timeon();
  timeon_ = value;
}

// required int32 timeOff = 12;
inline bool Shop::has_timeoff() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void Shop::set_has_timeoff() {
  _has_bits_[0] |= 0x00000800u;
}
inline void Shop::clear_has_timeoff() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void Shop::clear_timeoff() {
  timeoff_ = 0;
  clear_has_timeoff();
}
inline ::google::protobuf::int32 Shop::timeoff() const {
  return timeoff_;
}
inline void Shop::set_timeoff(::google::protobuf::int32 value) {
  set_has_timeoff();
  timeoff_ = value;
}

// -------------------------------------------------------------------

// ShopListResponse

// required .com.tiange.mdsj.proto.ShopResult result = 1;
inline bool ShopListResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ShopListResponse::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ShopListResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ShopListResponse::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::com::tiange::mdsj::proto::ShopResult ShopListResponse::result() const {
  return static_cast< ::com::tiange::mdsj::proto::ShopResult >(result_);
}
inline void ShopListResponse::set_result(::com::tiange::mdsj::proto::ShopResult value) {
  assert(::com::tiange::mdsj::proto::ShopResult_IsValid(value));
  set_has_result();
  result_ = value;
}

// repeated .com.tiange.mdsj.proto.Shop shop = 2;
inline int ShopListResponse::shop_size() const {
  return shop_.size();
}
inline void ShopListResponse::clear_shop() {
  shop_.Clear();
}
inline const ::com::tiange::mdsj::proto::Shop& ShopListResponse::shop(int index) const {
  return shop_.Get(index);
}
inline ::com::tiange::mdsj::proto::Shop* ShopListResponse::mutable_shop(int index) {
  return shop_.Mutable(index);
}
inline ::com::tiange::mdsj::proto::Shop* ShopListResponse::add_shop() {
  return shop_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::tiange::mdsj::proto::Shop >&
ShopListResponse::shop() const {
  return shop_;
}
inline ::google::protobuf::RepeatedPtrField< ::com::tiange::mdsj::proto::Shop >*
ShopListResponse::mutable_shop() {
  return &shop_;
}

// -------------------------------------------------------------------

// ItemDetailRequest

// required int32 itemId = 1;
inline bool ItemDetailRequest::has_itemid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ItemDetailRequest::set_has_itemid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ItemDetailRequest::clear_has_itemid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ItemDetailRequest::clear_itemid() {
  itemid_ = 0;
  clear_has_itemid();
}
inline ::google::protobuf::int32 ItemDetailRequest::itemid() const {
  return itemid_;
}
inline void ItemDetailRequest::set_itemid(::google::protobuf::int32 value) {
  set_has_itemid();
  itemid_ = value;
}

// -------------------------------------------------------------------

// Item

// required int32 added = 1;
inline bool Item::has_added() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Item::set_has_added() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Item::clear_has_added() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Item::clear_added() {
  added_ = 0;
  clear_has_added();
}
inline ::google::protobuf::int32 Item::added() const {
  return added_;
}
inline void Item::set_added(::google::protobuf::int32 value) {
  set_has_added();
  added_ = value;
}

// required int32 itemId = 2;
inline bool Item::has_itemid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Item::set_has_itemid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Item::clear_has_itemid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Item::clear_itemid() {
  itemid_ = 0;
  clear_has_itemid();
}
inline ::google::protobuf::int32 Item::itemid() const {
  return itemid_;
}
inline void Item::set_itemid(::google::protobuf::int32 value) {
  set_has_itemid();
  itemid_ = value;
}

// required string name = 3;
inline bool Item::has_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Item::set_has_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Item::clear_has_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Item::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& Item::name() const {
  return *name_;
}
inline void Item::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void Item::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void Item::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Item::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* Item::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Item::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required string desc = 4;
inline bool Item::has_desc() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Item::set_has_desc() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Item::clear_has_desc() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Item::clear_desc() {
  if (desc_ != &::google::protobuf::internal::kEmptyString) {
    desc_->clear();
  }
  clear_has_desc();
}
inline const ::std::string& Item::desc() const {
  return *desc_;
}
inline void Item::set_desc(const ::std::string& value) {
  set_has_desc();
  if (desc_ == &::google::protobuf::internal::kEmptyString) {
    desc_ = new ::std::string;
  }
  desc_->assign(value);
}
inline void Item::set_desc(const char* value) {
  set_has_desc();
  if (desc_ == &::google::protobuf::internal::kEmptyString) {
    desc_ = new ::std::string;
  }
  desc_->assign(value);
}
inline void Item::set_desc(const char* value, size_t size) {
  set_has_desc();
  if (desc_ == &::google::protobuf::internal::kEmptyString) {
    desc_ = new ::std::string;
  }
  desc_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Item::mutable_desc() {
  set_has_desc();
  if (desc_ == &::google::protobuf::internal::kEmptyString) {
    desc_ = new ::std::string;
  }
  return desc_;
}
inline ::std::string* Item::release_desc() {
  clear_has_desc();
  if (desc_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = desc_;
    desc_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Item::set_allocated_desc(::std::string* desc) {
  if (desc_ != &::google::protobuf::internal::kEmptyString) {
    delete desc_;
  }
  if (desc) {
    set_has_desc();
    desc_ = desc;
  } else {
    clear_has_desc();
    desc_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required int32 type1 = 5;
inline bool Item::has_type1() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Item::set_has_type1() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Item::clear_has_type1() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Item::clear_type1() {
  type1_ = 0;
  clear_has_type1();
}
inline ::google::protobuf::int32 Item::type1() const {
  return type1_;
}
inline void Item::set_type1(::google::protobuf::int32 value) {
  set_has_type1();
  type1_ = value;
}

// required int32 type2 = 6;
inline bool Item::has_type2() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Item::set_has_type2() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Item::clear_has_type2() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Item::clear_type2() {
  type2_ = 0;
  clear_has_type2();
}
inline ::google::protobuf::int32 Item::type2() const {
  return type2_;
}
inline void Item::set_type2(::google::protobuf::int32 value) {
  set_has_type2();
  type2_ = value;
}

// required int32 quality = 7;
inline bool Item::has_quality() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Item::set_has_quality() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Item::clear_has_quality() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Item::clear_quality() {
  quality_ = 0;
  clear_has_quality();
}
inline ::google::protobuf::int32 Item::quality() const {
  return quality_;
}
inline void Item::set_quality(::google::protobuf::int32 value) {
  set_has_quality();
  quality_ = value;
}

// required int32 hp = 8;
inline bool Item::has_hp() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Item::set_has_hp() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Item::clear_has_hp() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Item::clear_hp() {
  hp_ = 0;
  clear_has_hp();
}
inline ::google::protobuf::int32 Item::hp() const {
  return hp_;
}
inline void Item::set_hp(::google::protobuf::int32 value) {
  set_has_hp();
  hp_ = value;
}

// required int32 cp = 9;
inline bool Item::has_cp() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void Item::set_has_cp() {
  _has_bits_[0] |= 0x00000100u;
}
inline void Item::clear_has_cp() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void Item::clear_cp() {
  cp_ = 0;
  clear_has_cp();
}
inline ::google::protobuf::int32 Item::cp() const {
  return cp_;
}
inline void Item::set_cp(::google::protobuf::int32 value) {
  set_has_cp();
  cp_ = value;
}

// required int32 atk = 10;
inline bool Item::has_atk() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void Item::set_has_atk() {
  _has_bits_[0] |= 0x00000200u;
}
inline void Item::clear_has_atk() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void Item::clear_atk() {
  atk_ = 0;
  clear_has_atk();
}
inline ::google::protobuf::int32 Item::atk() const {
  return atk_;
}
inline void Item::set_atk(::google::protobuf::int32 value) {
  set_has_atk();
  atk_ = value;
}

// required int32 def = 11;
inline bool Item::has_def() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void Item::set_has_def() {
  _has_bits_[0] |= 0x00000400u;
}
inline void Item::clear_has_def() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void Item::clear_def() {
  def_ = 0;
  clear_has_def();
}
inline ::google::protobuf::int32 Item::def() const {
  return def_;
}
inline void Item::set_def(::google::protobuf::int32 value) {
  set_has_def();
  def_ = value;
}

// required int32 dex = 12;
inline bool Item::has_dex() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void Item::set_has_dex() {
  _has_bits_[0] |= 0x00000800u;
}
inline void Item::clear_has_dex() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void Item::clear_dex() {
  dex_ = 0;
  clear_has_dex();
}
inline ::google::protobuf::int32 Item::dex() const {
  return dex_;
}
inline void Item::set_dex(::google::protobuf::int32 value) {
  set_has_dex();
  dex_ = value;
}

// required int32 cri = 13;
inline bool Item::has_cri() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void Item::set_has_cri() {
  _has_bits_[0] |= 0x00001000u;
}
inline void Item::clear_has_cri() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void Item::clear_cri() {
  cri_ = 0;
  clear_has_cri();
}
inline ::google::protobuf::int32 Item::cri() const {
  return cri_;
}
inline void Item::set_cri(::google::protobuf::int32 value) {
  set_has_cri();
  cri_ = value;
}

// required int32 block = 14;
inline bool Item::has_block() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void Item::set_has_block() {
  _has_bits_[0] |= 0x00002000u;
}
inline void Item::clear_has_block() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void Item::clear_block() {
  block_ = 0;
  clear_has_block();
}
inline ::google::protobuf::int32 Item::block() const {
  return block_;
}
inline void Item::set_block(::google::protobuf::int32 value) {
  set_has_block();
  block_ = value;
}

// required int32 agl = 15;
inline bool Item::has_agl() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void Item::set_has_agl() {
  _has_bits_[0] |= 0x00004000u;
}
inline void Item::clear_has_agl() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void Item::clear_agl() {
  agl_ = 0;
  clear_has_agl();
}
inline ::google::protobuf::int32 Item::agl() const {
  return agl_;
}
inline void Item::set_agl(::google::protobuf::int32 value) {
  set_has_agl();
  agl_ = value;
}

// required int32 strengLevel = 16;
inline bool Item::has_strenglevel() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void Item::set_has_strenglevel() {
  _has_bits_[0] |= 0x00008000u;
}
inline void Item::clear_has_strenglevel() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void Item::clear_strenglevel() {
  strenglevel_ = 0;
  clear_has_strenglevel();
}
inline ::google::protobuf::int32 Item::strenglevel() const {
  return strenglevel_;
}
inline void Item::set_strenglevel(::google::protobuf::int32 value) {
  set_has_strenglevel();
  strenglevel_ = value;
}

// required int32 inlayNum = 17;
inline bool Item::has_inlaynum() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void Item::set_has_inlaynum() {
  _has_bits_[0] |= 0x00010000u;
}
inline void Item::clear_has_inlaynum() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void Item::clear_inlaynum() {
  inlaynum_ = 0;
  clear_has_inlaynum();
}
inline ::google::protobuf::int32 Item::inlaynum() const {
  return inlaynum_;
}
inline void Item::set_inlaynum(::google::protobuf::int32 value) {
  set_has_inlaynum();
  inlaynum_ = value;
}

// required int32 discount = 18;
inline bool Item::has_discount() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void Item::set_has_discount() {
  _has_bits_[0] |= 0x00020000u;
}
inline void Item::clear_has_discount() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void Item::clear_discount() {
  discount_ = 0;
  clear_has_discount();
}
inline ::google::protobuf::int32 Item::discount() const {
  return discount_;
}
inline void Item::set_discount(::google::protobuf::int32 value) {
  set_has_discount();
  discount_ = value;
}

// required int32 sex = 19;
inline bool Item::has_sex() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void Item::set_has_sex() {
  _has_bits_[0] |= 0x00040000u;
}
inline void Item::clear_has_sex() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void Item::clear_sex() {
  sex_ = 0;
  clear_has_sex();
}
inline ::google::protobuf::int32 Item::sex() const {
  return sex_;
}
inline void Item::set_sex(::google::protobuf::int32 value) {
  set_has_sex();
  sex_ = value;
}

// required int32 statisticalType = 20;
inline bool Item::has_statisticaltype() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void Item::set_has_statisticaltype() {
  _has_bits_[0] |= 0x00080000u;
}
inline void Item::clear_has_statisticaltype() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void Item::clear_statisticaltype() {
  statisticaltype_ = 0;
  clear_has_statisticaltype();
}
inline ::google::protobuf::int32 Item::statisticaltype() const {
  return statisticaltype_;
}
inline void Item::set_statisticaltype(::google::protobuf::int32 value) {
  set_has_statisticaltype();
  statisticaltype_ = value;
}

// required int32 useType = 21;
inline bool Item::has_usetype() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void Item::set_has_usetype() {
  _has_bits_[0] |= 0x00100000u;
}
inline void Item::clear_has_usetype() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void Item::clear_usetype() {
  usetype_ = 0;
  clear_has_usetype();
}
inline ::google::protobuf::int32 Item::usetype() const {
  return usetype_;
}
inline void Item::set_usetype(::google::protobuf::int32 value) {
  set_has_usetype();
  usetype_ = value;
}

// required int32 overlay = 22;
inline bool Item::has_overlay() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void Item::set_has_overlay() {
  _has_bits_[0] |= 0x00200000u;
}
inline void Item::clear_has_overlay() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void Item::clear_overlay() {
  overlay_ = 0;
  clear_has_overlay();
}
inline ::google::protobuf::int32 Item::overlay() const {
  return overlay_;
}
inline void Item::set_overlay(::google::protobuf::int32 value) {
  set_has_overlay();
  overlay_ = value;
}

// required int32 valid = 23;
inline bool Item::has_valid() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void Item::set_has_valid() {
  _has_bits_[0] |= 0x00400000u;
}
inline void Item::clear_has_valid() {
  _has_bits_[0] &= ~0x00400000u;
}
inline void Item::clear_valid() {
  valid_ = 0;
  clear_has_valid();
}
inline ::google::protobuf::int32 Item::valid() const {
  return valid_;
}
inline void Item::set_valid(::google::protobuf::int32 value) {
  set_has_valid();
  valid_ = value;
}

// required int32 disappears = 24;
inline bool Item::has_disappears() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void Item::set_has_disappears() {
  _has_bits_[0] |= 0x00800000u;
}
inline void Item::clear_has_disappears() {
  _has_bits_[0] &= ~0x00800000u;
}
inline void Item::clear_disappears() {
  disappears_ = 0;
  clear_has_disappears();
}
inline ::google::protobuf::int32 Item::disappears() const {
  return disappears_;
}
inline void Item::set_disappears(::google::protobuf::int32 value) {
  set_has_disappears();
  disappears_ = value;
}

// required int32 sellType = 25;
inline bool Item::has_selltype() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
inline void Item::set_has_selltype() {
  _has_bits_[0] |= 0x01000000u;
}
inline void Item::clear_has_selltype() {
  _has_bits_[0] &= ~0x01000000u;
}
inline void Item::clear_selltype() {
  selltype_ = 0;
  clear_has_selltype();
}
inline ::google::protobuf::int32 Item::selltype() const {
  return selltype_;
}
inline void Item::set_selltype(::google::protobuf::int32 value) {
  set_has_selltype();
  selltype_ = value;
}

// required int32 sellQuantity = 26;
inline bool Item::has_sellquantity() const {
  return (_has_bits_[0] & 0x02000000u) != 0;
}
inline void Item::set_has_sellquantity() {
  _has_bits_[0] |= 0x02000000u;
}
inline void Item::clear_has_sellquantity() {
  _has_bits_[0] &= ~0x02000000u;
}
inline void Item::clear_sellquantity() {
  sellquantity_ = 0;
  clear_has_sellquantity();
}
inline ::google::protobuf::int32 Item::sellquantity() const {
  return sellquantity_;
}
inline void Item::set_sellquantity(::google::protobuf::int32 value) {
  set_has_sellquantity();
  sellquantity_ = value;
}

// required int32 priceGold = 27;
inline bool Item::has_pricegold() const {
  return (_has_bits_[0] & 0x04000000u) != 0;
}
inline void Item::set_has_pricegold() {
  _has_bits_[0] |= 0x04000000u;
}
inline void Item::clear_has_pricegold() {
  _has_bits_[0] &= ~0x04000000u;
}
inline void Item::clear_pricegold() {
  pricegold_ = 0;
  clear_has_pricegold();
}
inline ::google::protobuf::int32 Item::pricegold() const {
  return pricegold_;
}
inline void Item::set_pricegold(::google::protobuf::int32 value) {
  set_has_pricegold();
  pricegold_ = value;
}

// required int32 priceCoins = 28;
inline bool Item::has_pricecoins() const {
  return (_has_bits_[0] & 0x08000000u) != 0;
}
inline void Item::set_has_pricecoins() {
  _has_bits_[0] |= 0x08000000u;
}
inline void Item::clear_has_pricecoins() {
  _has_bits_[0] &= ~0x08000000u;
}
inline void Item::clear_pricecoins() {
  pricecoins_ = 0;
  clear_has_pricecoins();
}
inline ::google::protobuf::int32 Item::pricecoins() const {
  return pricecoins_;
}
inline void Item::set_pricecoins(::google::protobuf::int32 value) {
  set_has_pricecoins();
  pricecoins_ = value;
}

// required int32 timeOn = 29;
inline bool Item::has_timeon() const {
  return (_has_bits_[0] & 0x10000000u) != 0;
}
inline void Item::set_has_timeon() {
  _has_bits_[0] |= 0x10000000u;
}
inline void Item::clear_has_timeon() {
  _has_bits_[0] &= ~0x10000000u;
}
inline void Item::clear_timeon() {
  timeon_ = 0;
  clear_has_timeon();
}
inline ::google::protobuf::int32 Item::timeon() const {
  return timeon_;
}
inline void Item::set_timeon(::google::protobuf::int32 value) {
  set_has_timeon();
  timeon_ = value;
}

// required int32 timeOff = 30;
inline bool Item::has_timeoff() const {
  return (_has_bits_[0] & 0x20000000u) != 0;
}
inline void Item::set_has_timeoff() {
  _has_bits_[0] |= 0x20000000u;
}
inline void Item::clear_has_timeoff() {
  _has_bits_[0] &= ~0x20000000u;
}
inline void Item::clear_timeoff() {
  timeoff_ = 0;
  clear_has_timeoff();
}
inline ::google::protobuf::int32 Item::timeoff() const {
  return timeoff_;
}
inline void Item::set_timeoff(::google::protobuf::int32 value) {
  set_has_timeoff();
  timeoff_ = value;
}

// -------------------------------------------------------------------

// ItemDetailResponse

// required .com.tiange.mdsj.proto.ShopResult result = 1;
inline bool ItemDetailResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ItemDetailResponse::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ItemDetailResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ItemDetailResponse::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::com::tiange::mdsj::proto::ShopResult ItemDetailResponse::result() const {
  return static_cast< ::com::tiange::mdsj::proto::ShopResult >(result_);
}
inline void ItemDetailResponse::set_result(::com::tiange::mdsj::proto::ShopResult value) {
  assert(::com::tiange::mdsj::proto::ShopResult_IsValid(value));
  set_has_result();
  result_ = value;
}

// required .com.tiange.mdsj.proto.Item item = 2;
inline bool ItemDetailResponse::has_item() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ItemDetailResponse::set_has_item() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ItemDetailResponse::clear_has_item() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ItemDetailResponse::clear_item() {
  if (item_ != NULL) item_->::com::tiange::mdsj::proto::Item::Clear();
  clear_has_item();
}
inline const ::com::tiange::mdsj::proto::Item& ItemDetailResponse::item() const {
  return item_ != NULL ? *item_ : *default_instance_->item_;
}
inline ::com::tiange::mdsj::proto::Item* ItemDetailResponse::mutable_item() {
  set_has_item();
  if (item_ == NULL) item_ = new ::com::tiange::mdsj::proto::Item;
  return item_;
}
inline ::com::tiange::mdsj::proto::Item* ItemDetailResponse::release_item() {
  clear_has_item();
  ::com::tiange::mdsj::proto::Item* temp = item_;
  item_ = NULL;
  return temp;
}
inline void ItemDetailResponse::set_allocated_item(::com::tiange::mdsj::proto::Item* item) {
  delete item_;
  item_ = item;
  if (item) {
    set_has_item();
  } else {
    clear_has_item();
  }
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto
}  // namespace mdsj
}  // namespace tiange
}  // namespace com

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::com::tiange::mdsj::proto::ShopResult>() {
  return ::com::tiange::mdsj::proto::ShopResult_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ShopProto_2eproto__INCLUDED
